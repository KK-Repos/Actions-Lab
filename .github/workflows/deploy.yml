name: Deploy-Actions ðŸ”¥
on: push

env:
  PORT: 3000 
  AWS_ECR_REPO: 087229364167.dkr.ecr.ap-south-1.amazonaws.com/kk-ms-repo
  AWS_REGION: ap-south-1
jobs:
  - name: Send Slack notification
    uses: rtCamp/action-slack-notify@v2
    env:
      SLACK_WEBHOOK: https://hooks.slack.com/services/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
      SLACK_TITLE: Deployment Started
      SLACK_MESSAGE: 'MS :rocket:'
      SLACK_USERNAME: kk-bot
      SLACK_FOOTER: kk Github Actions
      SLACK_ICON: https:///app.klenty.com/new_assets/lib/img/kl_new_pink.png
      MSG_MINIMAL: message,commit

  create-tag:
    name: Generate Tag for Image
    runs-on: kk-ms
    steps:
      - name: Generate a image Tag
        run: |
          if [ -d "workspace" ]; then sudo rm -r "workspace"; fi
          mkdir workspace
          TAG=$(date --utc +%Y.%m.%d-%H.%M)
          echo ${TAG} >> vars.txt
      - name: Upload Data Artifact
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: vars.txt
          retention-days: 1

  build-image:
    name: Build Image
    needs: create-tag
    uses: ./.github/workflows/reusebale_build.yml

  unit-test:
    name: Unit Test
    needs: build-image
    uses: ./.github/workflows/reuseable_unit-test.yml

  push-to-ecr:
    permissions:
      id-token: write
      contents: write
    name: Image push to ECR repo
    needs: [build-image,unit-test]
    runs-on: kk-ms
    environment: prod
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name:  Get the tag
        uses: ./.github/actions/getTagName
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::087229364167:role/test-kk
          aws-region: "ap-south-1"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: echo tag name
        run: echo ${{ env.TAG }}
      - name: push to ECR
        run: |
          docker tag kk-ms:${TAG} ${{env.AWS_ECR_REPO}}:${{ env.TAG }}
          docker push ${{env.AWS_ECR_REPO}}:${{ env.TAG }}

  internal_cluster_deployment:
    needs: push-to-ecr
    # environment: prod
    permissions:
      id-token: write
      contents: write
    runs-on: kk-ms
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::087229364167:role/test-kk
          aws-region: "ap-south-1"
      - name: Login to Amazon ECR
        id: id-token
        uses: aws-actions/amazon-ecr-login@v2
      - name:  Get the tag
        uses: ./.github/actions/getTagName
      - name: test
        run: echo $TAG
      - name: Update kk-test-fn lambda
        run: |
          aws lambda update-function-code \
            --function-name kk-test-fn  \
            --image-uri ${{env.AWS_ECR_REPO}}:${{ env.TAG }} --region ${{ env.AWS_REGION }} > /dev/null
      - name: update userpicker-2
        run: echo $TAG
      - name: update userpicker-3
        run: echo $TAG  
      - name: update userpicker-4
        run: echo $TAG 
      - name: update userpicker-5
        run: echo $TAG
      - name: update userpicker-6
        run: echo $TAG
      - name: update userpicker-7
        run: echo $TAG  
      - name: update userpicker-8
        run: echo $TAG   

  main_cluster_deployment:
    needs: push-to-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      - name : test env for tag
        run: echo $TAG
      - name:  Get the tag
        uses: ./.github/actions/getTagName
      - name : test env for tag
        run: echo $TAG
  icp_cluster_deployment:
    needs: push-to-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      - name : test env for tag
        run: echo $TAG
      - name:  Get the tag
        uses: ./.github/actions/getTagName
      - name : test env for tag
        run: echo $TAG
      - name : test env for tag-1
        run: echo $TAG