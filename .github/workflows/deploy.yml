name: Deploy-Actions
on: push

env:
  PORT: 3000
jobs:

  build-image:
      uses: ./.github/workflows/reusebale_build.yml
      with:
        job_to_run: build-image
  unit-test:
    needs: build-image
    uses: ./.github/workflows/reusebale_build.yml
    with:
      job_to_run: unit-test
  
  # build-image:
  #   runs-on: ubuntu-latest  # Adjust the runner if needed
  #   outputs:
  #     output1: ${{ steps.create-tag-step.outputs.TAG }}
  #   steps:
  #     - name: Generate and set tag
  #       id: create-tag-step
  #       run: |
  #         # Use UTC for consistent time-based tags across regions
  #         TAG=$(date --utc +%Y.%m.%d-%H.%M)
  #         # Set the tag as an environment variable for subsequent steps
  #         echo "TAG=${TAG}" >> $GITHUB_OUTPUT
  #     - name: Check out repository
  #       uses: actions/checkout@v3
  #     - name: Build image
  #       uses: .github/workflows/reusebale.yml
  
  # check:
  #   runs-on: ubuntu-latest
  #   needs: create-tag
  #   steps:
  #     - env:
  #         OUTPUT1: ${{needs.create-tag.outputs.output1}}
  #       run: echo "$OUTPUT1" 

          
  # unit-test:
  #   needs: build-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Branch
  #       uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #     - name: Download Data Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build-image
  #         path: workspace
  #     - name: Get docker image
  #       run: docker load -i workspace/mailsender_image
  #     - name: run unit test
  #       run: docker run -t --entrypoint npm kk-ms:latest run test
  # push-to-ecr:
  #   environment: prod
  #   needs: unit-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Data Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build-image
  #         path: workspace
  #     - name: Get docker image
  #       run: docker load -i workspace/mailsender_image
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ vars.AWS_REGION }}
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
  #     - name: push to ECR
  #       run: |
  #         docker tag kk-ms:latest 087229364167.dkr.ecr.ap-south-1.amazonaws.com/kk-ms-repo:kk-img-tag
  #         docker push 087229364167.dkr.ecr.ap-south-1.amazonaws.com/kk-ms-repo:kk-img-tag
